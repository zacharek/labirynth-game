{"version":3,"sources":["components/LevelGeneration/generateLevel.js","components/GameGrid/GameGrid.js","components/App/App.js","serviceWorker.js","index.js"],"names":["newLevel","gridSize","level","y","levelY","x","push","wall","isEnter","isExit","hasPlayer","newRoute","entryArray","length","array","ranInY","Math","floor","random","ranInX","passArray","errorCount","setTurn","ceil","filledLevel","routePositions","undefined","fillSpaces","object","mazeArray","breakLength","mainErrorCount","ranPos","round","splice","generateLevel","size","difficulty","returnedObject","createRoute","GameGrid","state","handleMoveRight","position","setState","handleCompleted","handleMoveLeft","handleMoveUp","handleMoveDown","console","log","window","addEventListener","e","code","prevProps","prevState","this","props","start","output","map","elem","indexY","indexX","key","class","gotPlayer","className","buildLevel","Component","GameBlock","style","width","height","App","restarted","handleCLick","onClick","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.28464c99.chunk.js","sourcesContent":["function generateLevel(size,difficulty){\n    let gridArray = newLevel(size);\n    return createRoute(gridArray,difficulty*size);\n}\nfunction newLevel(gridSize){\n    let level =[];\n    for (let y=1;y<=gridSize;y++){\n        let levelY=[];\n        for (let x=1;x<=gridSize;x++){\n            levelY.push({wall: 1,\n                isEnter: 0,\n                isExit: 0,\n                hasPlayer:0\n            });\n        }\n        level.push(levelY)\n    }\n    return level;\n}\nfunction createRoute(entryArray,length) {\n    let passArray=[];\n    let returnedObject;\n    let array=entryArray;\n    while(passArray.length<length) {\n        returnedObject=newRoute(array,length);\n        passArray=returnedObject.routePositions;\n        array=newLevel(entryArray.length)\n    }\n    return [[passArray[0],passArray[1]], fillSpaces(returnedObject)];\n}\nfunction newRoute(entryArray,length) {\n    let array=entryArray;\n    //Entrance generation\n    let ranInY = Math.floor(Math.random() * (array.length -2)+1);\n    let ranInX = Math.floor(Math.random() * (array.length -2)+1);\n    let passArray = [ranInX,ranInY];\n    let errorCount=0;\n    //sets entrance\n    array[ranInY][ranInX].isEnter=1;\n    array[ranInY][ranInX].hasPlayer=1;\n    array[ranInY][ranInX].wall=0;\n    while (passArray.length<length){\n        let setTurn = Math.ceil(Math.random() * 4);\n        ranInX = passArray[passArray.length-2];\n        ranInY = passArray[passArray.length-1];\n        if (errorCount>10){\n            return {filledLevel:entryArray, routePositions:passArray};\n        }else if (setTurn===1){\n            if (array[ranInY+1]!==undefined && array[ranInY+1][ranInX]!==undefined) {\n                if (array[ranInY + 2] !== undefined && array[ranInY + 2][ranInX] !== undefined) {\n                    if (array[ranInY + 1][ranInX].wall === 1 && array[ranInY + 2][ranInX].wall === 1) {\n                        if (array[ranInY + 1][ranInX - 1] === undefined || (array[ranInY + 1][ranInX - 1] !== undefined && array[ranInY + 1][ranInX - 1].wall === 1)) {\n                            if (array[ranInY + 1][ranInX + 1] === undefined || (array[ranInY + 1][ranInX + 1] !== undefined && array[ranInY + 1][ranInX + 1].wall === 1)) {\n                                array[ranInY + 1][ranInX].wall = 0;\n                                passArray.push(ranInX, ranInY + 1);\n                                errorCount = 0;\n                            }\n                        }\n                    }else{\n                        errorCount++;\n                    }\n                }\n            }else{\n                errorCount++;\n            }\n        }else if(setTurn===2){\n            if (array[ranInY-1]!==undefined && array[ranInY-1][ranInX]!==undefined) {\n                if (array[ranInY - 2] !== undefined && array[ranInY - 2][ranInX] !== undefined) {\n                    if (array[ranInY - 1][ranInX].wall === 1 && array[ranInY - 2][ranInX].wall === 1) {\n                        if (array[ranInY - 1][ranInX - 1] === undefined || (array[ranInY - 1][ranInX - 1] !== undefined && array[ranInY - 1][ranInX - 1].wall === 1)) {\n                            if (array[ranInY - 1][ranInX + 1] === undefined || (array[ranInY - 1][ranInX + 1] !== undefined && array[ranInY - 1][ranInX + 1].wall === 1)) {\n                                array[ranInY - 1][ranInX].wall = 0;\n                                passArray.push(ranInX, ranInY - 1);\n                                errorCount = 0;\n                            }\n                        }\n                    }else{\n                        errorCount++;\n                    }\n                }\n            }else{\n                errorCount++;\n            }\n        }else if(setTurn===3){\n            if (array[ranInY]!==undefined && array[ranInY][ranInX+1]!==undefined) {\n                if (array[ranInY] !== undefined && array[ranInY][ranInX+2] !== undefined) {\n                    if (array[ranInY][ranInX+1].wall === 1 && array[ranInY][ranInX+2].wall === 1) {\n                        if ((array[ranInY + 1] === undefined || array[ranInY + 1][ranInX + 1] === undefined) || (array[ranInY + 1][ranInX + 1] !== undefined && array[ranInY + 1][ranInX + 1].wall === 1)) {\n                            if ((array[ranInY - 1] === undefined ||array[ranInY - 1][ranInX + 1] === undefined) || (array[ranInY - 1][ranInX + 1] !== undefined && array[ranInY - 1][ranInX + 1].wall === 1)) {\n                                array[ranInY][ranInX + 1].wall = 0;\n                                passArray.push(ranInX + 1, ranInY);\n                                errorCount = 0;\n                            }\n                        }\n                    }else{\n                        errorCount++;\n                    }\n                }\n            }else{\n                errorCount++;\n            }\n        }else if(setTurn===4){\n            if (array[ranInY]!==undefined && array[ranInY][ranInX-1]!==undefined) {\n                if (array[ranInY] !== undefined && array[ranInY][ranInX-2] !== undefined) {\n                    if (array[ranInY][ranInX-1].wall === 1 && array[ranInY][ranInX-2].wall === 1) {\n                        if ((array[ranInY + 1] === undefined ||array[ranInY + 1][ranInX - 1] === undefined) || (array[ranInY + 1][ranInX - 1] !== undefined && array[ranInY + 1][ranInX - 1].wall === 1)) {\n                            if ((array[ranInY - 1] === undefined ||array[ranInY - 1][ranInX - 1] === undefined) || (array[ranInY - 1][ranInX - 1] !== undefined && array[ranInY - 1][ranInX - 1].wall === 1)) {\n                                array[ranInY][ranInX - 1].wall = 0;\n                                passArray.push(ranInX - 1, ranInY);\n                                errorCount = 0;\n                            }\n                        }\n                    }else{\n                        errorCount++;\n                    }\n                }\n            }else{\n                errorCount++;\n            }\n        }\n    }\n    array[passArray[passArray.length-1]][passArray[passArray.length-2]].isExit=1;\n    return {filledLevel:array, routePositions:passArray};\n}\n\nfunction fillSpaces(object) {\n    let mazeArray = object.routePositions;\n    let array = object.filledLevel;\n    let breakLength = 0;\n    let mainErrorCount = 0;\n    while (breakLength!==mazeArray.length || mainErrorCount<array.length*5){\n        breakLength = mazeArray.length;\n        let errorCount = 0;\n        let ranPos = Math.round(Math.random() * mazeArray.length/2)*2;\n        let ranInX = mazeArray[ranPos];\n        let ranInY = mazeArray[ranPos+1];\n        mazeArray.splice(ranPos,2);\n        mazeArray.push(ranInX);\n        mazeArray.push(ranInY);\n        while (errorCount<10){\n            let setTurn = Math.ceil(Math.random() * 4);\n            ranInX = mazeArray[mazeArray.length-2];\n            ranInY = mazeArray[mazeArray.length-1];\n            if (setTurn===1){\n                if (array[ranInY+1]!==undefined && array[ranInY+1][ranInX]!==undefined) {\n                    if (array[ranInY + 2] !== undefined && array[ranInY + 2][ranInX] !== undefined) {\n                        if (array[ranInY + 1][ranInX].wall === 1 && array[ranInY + 2][ranInX].wall === 1) {\n                            if (array[ranInY + 1][ranInX - 1] === undefined || (array[ranInY + 1][ranInX - 1] !== undefined && array[ranInY + 1][ranInX - 1].wall === 1)) {\n                                if (array[ranInY + 1][ranInX + 1] === undefined || (array[ranInY + 1][ranInX + 1] !== undefined && array[ranInY + 1][ranInX + 1].wall === 1)) {\n                                    array[ranInY + 1][ranInX].wall = 0;\n                                    mazeArray.push(ranInX, ranInY + 1);\n                                    errorCount = 0;\n                                }\n                            }\n                        }else{\n                            errorCount++;\n                        }\n                    }\n                }else{\n                    errorCount++;\n                }\n            }else if(setTurn===2){\n                if (array[ranInY-1]!==undefined && array[ranInY-1][ranInX]!==undefined) {\n                    if (array[ranInY - 2] !== undefined && array[ranInY - 2][ranInX] !== undefined) {\n                        if (array[ranInY - 1][ranInX].wall === 1 && array[ranInY - 2][ranInX].wall === 1) {\n                            if (array[ranInY - 1][ranInX - 1] === undefined || (array[ranInY - 1][ranInX - 1] !== undefined && array[ranInY - 1][ranInX - 1].wall === 1)) {\n                                if (array[ranInY - 1][ranInX + 1] === undefined || (array[ranInY - 1][ranInX + 1] !== undefined && array[ranInY - 1][ranInX + 1].wall === 1)) {\n                                    array[ranInY - 1][ranInX].wall = 0;\n                                    mazeArray.push(ranInX, ranInY - 1);\n                                    errorCount = 0;\n                                }\n                            }\n                        }else{\n                            errorCount++;\n                        }\n                    }\n                }else{\n                    errorCount++;\n                }\n            }else if(setTurn===3){\n                if (array[ranInY]!==undefined && array[ranInY][ranInX+1]!==undefined) {\n                    if (array[ranInY] !== undefined && array[ranInY][ranInX+2] !== undefined) {\n                        if (array[ranInY][ranInX+1].wall === 1 && array[ranInY][ranInX+2].wall === 1) {\n                            if ((array[ranInY + 1] === undefined || array[ranInY + 1][ranInX + 1] === undefined) || (array[ranInY + 1][ranInX + 1] !== undefined && array[ranInY + 1][ranInX + 1].wall === 1)) {\n                                if ((array[ranInY - 1] === undefined ||array[ranInY - 1][ranInX + 1] === undefined) || (array[ranInY - 1][ranInX + 1] !== undefined && array[ranInY - 1][ranInX + 1].wall === 1)) {\n                                    array[ranInY][ranInX + 1].wall = 0;\n                                    mazeArray.push(ranInX + 1, ranInY);\n                                    errorCount = 0;\n                                }\n                            }\n                        }else{\n                            errorCount++;\n                        }\n                    }\n                }else{\n                    errorCount++;\n                }\n            }else if(setTurn===4){\n                if (array[ranInY]!==undefined && array[ranInY][ranInX-1]!==undefined) {\n                    if (array[ranInY] !== undefined && array[ranInY][ranInX-2] !== undefined) {\n                        if (array[ranInY][ranInX-1].wall === 1 && array[ranInY][ranInX-2].wall === 1) {\n                            if ((array[ranInY + 1] === undefined ||array[ranInY + 1][ranInX - 1] === undefined) || (array[ranInY + 1][ranInX - 1] !== undefined && array[ranInY + 1][ranInX - 1].wall === 1)) {\n                                if ((array[ranInY - 1] === undefined ||array[ranInY - 1][ranInX - 1] === undefined) || (array[ranInY - 1][ranInX - 1] !== undefined && array[ranInY - 1][ranInX - 1].wall === 1)) {\n                                    array[ranInY][ranInX - 1].wall = 0;\n                                    mazeArray.push(ranInX - 1, ranInY);\n                                    errorCount = 0;\n                                }\n                            }\n                        }else{\n                            errorCount++;\n                        }\n                    }\n                }else{\n                    errorCount++;\n                }\n            }\n        }\n        if (breakLength!==mazeArray.length){\n            mainErrorCount=0\n        }\n        if (breakLength===mazeArray.length){\n            mainErrorCount++\n        }\n    }\n    return array\n}\n\nexport default generateLevel;","import React, {Component} from \"react\";\nimport './GameGrid.scss';\nimport generateLevel from \"../LevelGeneration/generateLevel\";\n\nclass GameGrid extends Component{\n    state={\n        level:[],\n        size:25, //min 10 max 50\n        difficulty:2 //min 1 max 6\n    };\n    componentDidMount(){\n        window.addEventListener(\"keydown\",(e)=>{\n            if(e.code===\"KeyD\" || e.code===\"ArrowRight\"){\n                this.handleMoveRight()\n            }else if(e.code===\"KeyA\" || e.code===\"ArrowLeft\"){\n                this.handleMoveLeft()\n            }else if(e.code===\"KeyW\" || e.code===\"ArrowUp\"){\n                this.handleMoveUp()\n            }else if(e.code===\"KeyS\" || e.code===\"ArrowDown\"){\n                this.handleMoveDown()\n            }\n        })\n    }\n    componentWillUnmount() {\n        //window.removeEventListener\n    }\n    shouldComponentUpdate(prevProps,prevState) {\n        if (this.props.start !== prevProps.start){\n            this.setState({level:generateLevel(this.state.size,this.state.difficulty)});\n            return true\n        }else if(this.state.difficulty !== prevState.difficulty){\n            this.setState({level:generateLevel(this.state.size,this.state.difficulty)});\n            return true\n        }else return this.state.level[0] !== prevState.level[0];\n    }\n    handleMoveRight=()=>{\n        let level = this.state.level[1];\n        let position = this.state.level[0];\n        if(level[position[1]][position[0]+1].wall===0){\n            level[position[1]][position[0]].hasPlayer=0;\n            level[position[1]][position[0]+1].hasPlayer=1;\n            position=[position[0]+1,position[1]];\n            this.setState({level:[position,level]})\n        }\n        if (level[position[1]][position[0]].isExit===1){\n            this.handleCompleted()\n        }\n    };\n    handleMoveLeft=()=>{\n        let level = this.state.level[1];\n        let position = this.state.level[0];\n        if(level[position[1]][position[0]-1].wall===0){\n            level[position[1]][position[0]].hasPlayer=0;\n            level[position[1]][position[0]-1].hasPlayer=1;\n            position=[position[0]-1,position[1]];\n            this.setState({level:[position,level]})\n        }\n        if (level[position[1]][position[0]].isExit===1){\n            this.handleCompleted()\n        }\n    };\n    handleMoveUp=()=>{\n        let level = this.state.level[1];\n        let position = this.state.level[0];\n        if(level[position[1]-1][position[0]].wall===0){\n            level[position[1]][position[0]].hasPlayer=0;\n            level[position[1]-1][position[0]].hasPlayer=1;\n            position=[position[0],position[1]-1];\n            this.setState({level:[position,level]})\n        }\n        if (level[position[1]][position[0]].isExit===1){\n            this.handleCompleted()\n        }\n    };\n    handleMoveDown=()=>{\n        let level = this.state.level[1];\n        let position = this.state.level[0];\n        if(level[position[1]+1][position[0]].wall===0){\n            level[position[1]][position[0]].hasPlayer=0;\n            level[position[1]+1][position[0]].hasPlayer=1;\n            position=[position[0],position[1]+1];\n            this.setState({level:[position,level]})\n        }\n        if (level[position[1]][position[0]].isExit===1){\n            this.handleCompleted()\n        }\n    };\n    handleCompleted=()=>{\n        if (this.state.difficulty<6){\n            console.log(\"Brawo, pora na kolejny poziom\")\n            this.setState({difficulty:this.state.difficulty+1})\n        }else if (this.state.difficulty===6){\n            console.log(\"na ten moment nie ma więcej poziomów\")\n        }else if (this.state.size>50){\n            console.log(\"brawo, nie ma więcej poziomów dla Ciebie\")\n        }else{\n            console.log(\"coś jest nie tak\")\n        }\n    }\n    buildLevel(level,size){\n        let output;\n        if (level!==undefined){\n            output = level.map((elem, indexY) => {\n                return (\n                    elem.map((object, indexX) => {\n                        if (object.isEnter===1 && object.hasPlayer===1){\n                            return <GameBlock key={`X${indexX}Y${indexY}`} class=\"enter\" size={size} gotPlayer={1}/>\n                        }else if(object.isEnter===1){\n                            return <GameBlock key={`X${indexX}Y${indexY}`} class=\"enter\" size={size} gotPlayer={0}/>\n                        }else if(object.isExit===1 && object.hasPlayer===1){\n                            return <GameBlock key={`X${indexX}Y${indexY}`} class=\"exit\" size={size} gotPlayer={1}/>\n                        }else if(object.isExit===1){\n                            return <GameBlock key={`X${indexX}Y${indexY}`} class=\"exit\" size={size} gotPlayer={0}/>\n                        }else if(object.wall===0 && object.hasPlayer===1){\n                            return <GameBlock key={`X${indexX}Y${indexY}`} class=\"pass\" size={size} gotPlayer={1}/>\n                        }else if(object.wall===0){\n                            return <GameBlock key={`X${indexX}Y${indexY}`} class=\"pass\" size={size} gotPlayer={0}/>\n                        }else{\n                            return <GameBlock key={`X${indexX}Y${indexY}`} class=\"wall\" size={size} />\n                        }}))});\n        }\n        return output\n    }\n    render() {\n        return <div className=\"game_grid\" >{this.buildLevel(this.state.level[1],this.state.size)}</div>\n    }\n}\n\nclass GameBlock extends Component{\n    shouldComponentUpdate(prevProps) {\n        if(this.props.gotPlayer !== prevProps.gotPlayer){\n            return true\n        }else if(this.props.size !== prevProps.size){\n            return true\n        }else return this.props.class !== prevProps.class\n\n    }\n    render() {\n        let style={width:100/this.props.size+\"%\", height:100/this.props.size+\"%\"}\n        if(this.props.gotPlayer===1){\n            return(\n                <div className={`game_block ${this.props.class}`}\n                     style={style}>\n                    <div className=\"player\"/>\n                </div>\n            )\n        }else{\n            return(\n                <div className={`game_block ${this.props.class}`}\n                     style={{width:100/this.props.size+\"%\", height:100/this.props.size+\"%\"}}/>)\n        }\n    }\n}\n\nexport default GameGrid;","import React, {Component} from \"react\";\nimport './App.scss';\nimport GameGrid from \"../GameGrid/GameGrid\";\n\nclass App extends Component{\n    state={\n        restarted:0\n    };\n    handleCLick = ()=>{\n        this.setState({restarted:this.state.restarted+1})\n    };\n    render() {\n            return (\n                <>\n                    <button onClick={this.handleCLick}>Generate Level</button>\n                    <GameGrid start={this.state.restarted}/>\n                </>\n            )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}